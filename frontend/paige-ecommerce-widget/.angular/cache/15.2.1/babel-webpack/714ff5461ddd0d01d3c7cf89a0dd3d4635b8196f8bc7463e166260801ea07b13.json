{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.productsUrl = `${environment.baseUrl}/products`;\n    this.products = [];\n  }\n  getProducts() {\n    return this.http.get(this.productsUrl);\n  }\n  getProduct(sku) {\n    return this.http.get(`${this.productsUrl}/${sku}`);\n  }\n  updateProduct(product) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.put(`${this.productsUrl}/${product.sku}`, product, {\n      headers\n    });\n  }\n  deleteProduct(sku) {\n    return this.http.delete(`${this.productsUrl}/${sku}`);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,iBAAiB;;;AAU7C,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,gBAAW,GAAI,GAAGH,WAAW,CAACI,OAAO,WAAW;IAChD,aAAQ,GAAc,EAAE;EAEO;EAEvCC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACC,WAAW,CAAC;EACnD;EAEAC,UAAU,CAACC,GAAW;IACpB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACC,WAAW,IAAIE,GAAG,EAAE,CAAC;EAC7D;EAEAC,aAAa,CAACC,OAAgB;IAC5B,MAAMC,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzE,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACP,WAAW,IAAII,OAAO,CAACF,GAAG,EAAE,EAAEE,OAAO,EAAE;MACxEC;KACD,CAAC;EACJ;EAEAG,aAAa,CAACN,GAAW;IACvB,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACT,WAAW,IAAIE,GAAG,EAAE,CAAC;EAC7D;;AAvBWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;EAAAiB,YAHb;AAAM","names":["HttpHeaders","environment","ProductService","constructor","http","baseUrl","getProducts","get","productsUrl","getProduct","sku","updateProduct","product","headers","set","put","deleteProduct","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/samarthgoudar/Documents/Development/Projects/Git/Paige-Ecommerce-Widget/frontend/paige-ecommerce-widget/src/app/products/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environment';\n\n\n\nimport { Product } from './product.model';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class ProductService {\n  private productsUrl =  `${environment.baseUrl}/products`;\n  private products: Product[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.productsUrl);\n  }\n\n  getProduct(sku: string): Observable<Product> {\n    return this.http.get<Product>(`${this.productsUrl}/${sku}`);\n  }\n\n  updateProduct(product: Product): Observable<void> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.put<void>(`${this.productsUrl}/${product.sku}`, product, {\n      headers,\n    });\n  }\n\n  deleteProduct(sku: string): Observable<void> {\n    return this.http.delete<void>(`${this.productsUrl}/${sku}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}