{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../product.service\";\nimport * as i4 from \"@angular/common\";\nfunction ProductDetailComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductDetailComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Type is required and must be less than 56 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductDetailComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Description is required and must be less than 56 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductDetailComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Color is required and must be less than 56 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductDetailComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Price must be greater than or equal to 0 \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class ProductDetailComponent {\n  constructor(route, router, fb, productService) {\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n    this.productService = productService;\n    this.sku = \"\";\n    this.product = {\n      id: '',\n      sku: '',\n      name: '',\n      type: '',\n      description: '',\n      color: '',\n      price: 0\n    };\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      type: ['', [Validators.required, Validators.maxLength(55)]],\n      description: ['', [Validators.required, Validators.maxLength(55)]],\n      color: ['', [Validators.required, Validators.maxLength(55)]],\n      price: [0, [Validators.required, Validators.min(0)]]\n    });\n  }\n  ngOnInit() {\n    this.sku = this.route.snapshot.params['sku'];\n    this.getProduct(this.sku);\n  }\n  getProduct(sku) {\n    this.productService.getProduct(sku).subscribe(product => {\n      this.product = product;\n      this.productForm.patchValue({\n        name: product.name,\n        type: product.type,\n        description: product.description,\n        color: product.color,\n        price: product.price\n      });\n    });\n  }\n  updateProduct() {\n    const updatedProduct = {\n      ...this.product,\n      ...this.productForm.value\n    };\n    this.productService.updateProduct(updatedProduct).subscribe(() => this.router.navigate(['/product-list']));\n  }\n}\nProductDetailComponent.ɵfac = function ProductDetailComponent_Factory(t) {\n  return new (t || ProductDetailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ProductService));\n};\nProductDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductDetailComponent,\n  selectors: [[\"app-product-detail\"]],\n  decls: 28,\n  vars: 23,\n  consts: [[1, \"product-detail\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"type\", 3, \"ngClass\"], [\"formControlName\", \"description\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"color\", 3, \"ngClass\"], [\"type\", \"number\", \"formControlName\", \"price\", 3, \"ngClass\"], [\"type\", \"submit\"], [1, \"invalid-feedback\"]],\n  template: function ProductDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function ProductDetailComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.updateProduct();\n      });\n      i0.ɵɵelementStart(6, \"label\");\n      i0.ɵɵtext(7, \" Name: \");\n      i0.ɵɵelement(8, \"input\", 2);\n      i0.ɵɵtemplate(9, ProductDetailComponent_div_9_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\");\n      i0.ɵɵtext(11, \" Type: \");\n      i0.ɵɵelement(12, \"input\", 4);\n      i0.ɵɵtemplate(13, ProductDetailComponent_div_13_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"label\");\n      i0.ɵɵtext(15, \" Description: \");\n      i0.ɵɵelement(16, \"textarea\", 5);\n      i0.ɵɵtemplate(17, ProductDetailComponent_div_17_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\");\n      i0.ɵɵtext(19, \" Color: \");\n      i0.ɵɵelement(20, \"input\", 6);\n      i0.ɵɵtemplate(21, ProductDetailComponent_div_21_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\");\n      i0.ɵɵtext(23, \" Price: \");\n      i0.ɵɵelement(24, \"input\", 7);\n      i0.ɵɵtemplate(25, ProductDetailComponent_div_25_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 8);\n      i0.ɵɵtext(27, \"Save Changes\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.product.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"SKU: \", ctx.product.sku, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.productForm.get(\"name\").invalid && ctx.productForm.get(\"name\").touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.productForm.get(\"name\").invalid && ctx.productForm.get(\"name\").touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.productForm.get(\"type\").invalid && ctx.productForm.get(\"type\").touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.productForm.get(\"type\").invalid && ctx.productForm.get(\"type\").touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.productForm.get(\"description\").invalid && ctx.productForm.get(\"description\").touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.productForm.get(\"description\").invalid && ctx.productForm.get(\"description\").touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.productForm.get(\"color\").invalid && ctx.productForm.get(\"color\").touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.productForm.get(\"color\").invalid && ctx.productForm.get(\"color\").touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.productForm.get(\"price\").invalid && ctx.productForm.get(\"price\").touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.productForm.get(\"price\").invalid && ctx.productForm.get(\"price\").touched);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n  }\\n\\n  form[_ngcontent-%COMP%] {\\n    margin: 20px;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n  .error-message[_ngcontent-%COMP%] {\\n    color: red;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdC1kZXRhaWwvcHJvZHVjdC1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLFlBQVk7RUFDZDs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFVBQVU7RUFDWiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICB9XG5cbiAgZm9ybSB7XG4gICAgbWFyZ2luOiAyMHB4O1xuICB9XG4gIFxuICAuZm9ybS1ncm91cCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICBcbiAgLmVycm9yLW1lc3NhZ2Uge1xuICAgIGNvbG9yOiByZWQ7XG4gIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ProductDetailComponent","constructor","route","router","fb","productService","id","sku","name","type","description","color","price","productForm","group","required","maxLength","min","ngOnInit","snapshot","params","getProduct","subscribe","product","patchValue","updateProduct","updatedProduct","value","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/samarthgoudar/Documents/Development/Projects/Git/Paige-Ecommerce-Widget/frontend/paige-ecommerce-widget/src/app/products/product-detail/product-detail.component.ts","/Users/samarthgoudar/Documents/Development/Projects/Git/Paige-Ecommerce-Widget/frontend/paige-ecommerce-widget/src/app/products/product-detail/product-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../product.service';\nimport { Product } from '../product.model';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  sku: string = \"\";\n  product: Product ={\n    id: '',\n    sku: '',\n    name: '',\n    type: '',\n    description: '',\n    color: '',\n    price: 0\n  };\n  productForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private productService: ProductService\n  ) {\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      type: ['', [Validators.required, Validators.maxLength(55)]],\n      description: ['', [Validators.required, Validators.maxLength(55)]],\n      color: ['', [Validators.required, Validators.maxLength(55)]],\n      price: [0, [Validators.required, Validators.min(0)]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.sku = this.route.snapshot.params['sku'];\n    this.getProduct(this.sku);\n  }\n\n  getProduct(sku: string): void {\n    this.productService.getProduct(sku)\n      .subscribe((product: Product) => {\n        this.product = product;\n        this.productForm.patchValue({\n          name: product.name,\n          type: product.type,\n          description: product.description,\n          color: product.color,\n          price: product.price\n        });\n      });\n  }\n\n  updateProduct(): void {\n    const updatedProduct = {...this.product, ...this.productForm.value};\n    this.productService.updateProduct(updatedProduct)\n      .subscribe(() => this.router.navigate(['/product-list']));\n  }\n}\n","<!-- <div class=\"card\">\n  <div class=\"card-header\">\n    <h4>Product Detail - {{ sku }}</h4>\n  </div>\n  <div class=\"card-body\">\n    <form [formGroup]=\"productForm\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"type\">Type</label>\n        <input type=\"text\" class=\"form-control\" id=\"type\" formControlName=\"type\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <input type=\"text\" class=\"form-control\" id=\"description\" formControlName=\"description\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"color\">Color</label>\n        <input type=\"text\" class=\"form-control\" id=\"color\" formControlName=\"color\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"price\">Price</label>\n        <input type=\"number\" class=\"form-control\" id=\"price\" formControlName=\"price\">\n      </div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"updateProduct()\"\n        [disabled]=\"!productForm.invalid\">Update</button>\n\n\n    </form>\n  </div>\n</div> -->\n\n<div class=\"product-detail\">\n  <h1>{{ product.name }}</h1>\n  <p>SKU: {{ product.sku }}</p>\n\n  <form [formGroup]=\"productForm\" (ngSubmit)=\"updateProduct()\" novalidate>\n    <label>\n      Name:\n      <input type=\"text\" formControlName=\"name\" [ngClass]=\"{ 'is-invalid': productForm.get('name').invalid && productForm.get('name').touched }\">\n      <div class=\"invalid-feedback\" *ngIf=\"productForm.get('name').invalid && productForm.get('name').touched\">\n        Name is required\n      </div>\n    </label>\n\n    <label>\n      Type:\n      <input type=\"text\" formControlName=\"type\" [ngClass]=\"{ 'is-invalid': productForm.get('type').invalid && productForm.get('type').touched }\">\n      <div class=\"invalid-feedback\" *ngIf=\"productForm.get('type').invalid && productForm.get('type').touched\">\n        Type is required and must be less than 56 characters\n      </div>\n    </label>\n\n    <label>\n      Description:\n      <textarea formControlName=\"description\" [ngClass]=\"{ 'is-invalid': productForm.get('description').invalid && productForm.get('description').touched }\"></textarea>\n      <div class=\"invalid-feedback\" *ngIf=\"productForm.get('description').invalid && productForm.get('description').touched\">\n        Description is required and must be less than 56 characters\n      </div>\n    </label>\n\n    <label>\n      Color:\n      <input type=\"text\" formControlName=\"color\" [ngClass]=\"{ 'is-invalid': productForm.get('color').invalid && productForm.get('color').touched }\">\n      <div class=\"invalid-feedback\" *ngIf=\"productForm.get('color').invalid && productForm.get('color').touched\">\n        Color is required and must be less than 56 characters\n      </div>\n    </label>\n\n    <label>\n      Price:\n      <input type=\"number\" formControlName=\"price\" [ngClass]=\"{ 'is-invalid': productForm.get('price').invalid && productForm.get('price').touched }\">\n      <div class=\"invalid-feedback\" *ngIf=\"productForm.get('price').invalid && productForm.get('price').touched\">\n        Price must be greater than or equal to 0\n      </div>\n    </label>\n\n    <button type=\"submit\">Save Changes</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}