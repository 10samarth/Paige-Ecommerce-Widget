{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.products = [];\n  }\n  getProducts() {\n    return this.http.get('assets/product-fixtures.json');\n  }\n  deleteProduct(id) {\n    const index = this.products.findIndex(product => product.id === id);\n    if (index !== -1) {\n      this.products.splice(index, 1);\n    }\n  }\n  updateProduct(product) {\n    const index = this.products.findIndex(p => p.sku === product.sku);\n    if (index !== -1) {\n      this.products[index] = product;\n    }\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,aAAQ,GAAa,EAAE;EAEQ;EAEvCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,8BAA8B,CAAC;EACjE;EAEAC,aAAa,CAACC,EAAU;IACtB,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACC,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACJ,EAAE,KAAKA,EAAE,CAAC;IACrE,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACC,QAAQ,CAACG,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;;EAElC;EAEAK,aAAa,CAACF,OAAgB;IAC5B,MAAMH,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACC,SAAS,CAAEI,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKJ,OAAO,CAACI,GAAG,CAAC;IACnE,IAAIP,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,GAAGG,OAAO;;EAElC;;AAtBWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["ProductService","constructor","http","getProducts","get","deleteProduct","id","index","products","findIndex","product","splice","updateProduct","p","sku","factory","providedIn"],"sourceRoot":"","sources":["/Users/samarthgoudar/Documents/Development/Projects/Git/Paige-Ecommerce-Widget/frontend/paige-ecommerce-widget/src/app/products/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from './product.model';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n\n  private products:Product[] = []\n\n  constructor(private http: HttpClient) {}\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>('assets/product-fixtures.json');\n  }\n\n  deleteProduct(id: string) {\n    const index = this.products.findIndex((product) => product.id === id);\n    if (index !== -1) {\n      this.products.splice(index, 1);\n    }\n  }\n\n  updateProduct(product: Product) {\n    const index = this.products.findIndex((p) => p.sku === product.sku);\n    if (index !== -1) {\n      this.products[index] = product;\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}