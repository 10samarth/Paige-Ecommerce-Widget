{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductListComponent = class ProductListComponent {\n  constructor(productService) {\n    this.productService = productService;\n    // colorFilter: string = '';\n    this.filteredProducts = [];\n    this.selectedColors = ['blue', 'white'];\n    this.dropdownSettings = {};\n    // Pagination variables\n    this.currentPage = 1;\n    this.productsPerPage = 10;\n    this.itemsPerPage = 10;\n  }\n  ngOnInit() {\n    this.productService.getProducts().subscribe(data => {\n      this.filteredProducts = data;\n    });\n  }\n  deleteProduct(sku) {\n    this.productService.deleteProduct(sku).subscribe(() => {\n      // Filter out the deleted product from the products array\n      this.filteredProducts = this.filteredProducts.filter(p => p.sku !== sku);\n    });\n  }\n  filterProductsByColor() {\n    let result = [];\n    for (let i = 0; i < this.selectedColors.length; i++) {\n      const selectedColor = this.selectedColors[i];\n      result = result.concat(this.filteredProducts.filter(product => product.color.toLowerCase().includes(selectedColor.toLowerCase())));\n    }\n    // Remove duplicates\n    return Array.from(new Set(result));\n  }\n  get filteredProductsWithColor() {\n    const startIndex = (this.currentPage - 1) * this.productsPerPage;\n    const endIndex = startIndex + this.productsPerPage;\n    let result = [];\n    if (this.selectedColors.length > 0) {\n      result = this.filterProductsByColor();\n    } else {\n      result = this.filteredProducts;\n    }\n    return result.slice(startIndex, endIndex);\n  }\n  // get filteredProductsWithColor(): Product[] {\n  //   const startIndex = (this.currentPage - 1) * this.productsPerPage;\n  //   const endIndex = startIndex + this.productsPerPage;\n  //   return this.filteredProducts\n  //     .filter((product) =>\n  //       product.color.toLowerCase().includes(this.colorFilter.toLowerCase())\n  //     ).slice(startIndex, endIndex);\n  // }\n  get pages() {\n    const pageCount = Math.ceil(this.filteredProducts.length / this.productsPerPage);\n    return Array.from({\n      length: pageCount\n    }, (_, i) => i + 1);\n  }\n};\nProductListComponent = __decorate([Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})], ProductListComponent);\nexport { ProductListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAa1C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAW/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAVlC;IACA,qBAAgB,GAAc,EAAE;IAChC,mBAAc,GAAa,CAAC,MAAM,EAAE,OAAO,CAAC;IAC5C,qBAAgB,GAAG,EAAE;IAErB;IACA,gBAAW,GAAG,CAAC;IACf,oBAAe,GAAG,EAAE;IACpB,iBAAY,GAAW,EAAE;EAE4B;EAErDC,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAe,IAAI;MAC9D,IAAI,CAACC,gBAAgB,GAAGD,IAAI;IAC9B,CAAC,CAAC;EACJ;EAEAE,aAAa,CAACC,GAAW;IACvB,IAAI,CAACP,cAAc,CAACM,aAAa,CAACC,GAAG,CAAC,CAACJ,SAAS,CAAC,MAAK;MACpD;MACA,IAAI,CAACE,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACG,MAAM,CACjDC,CAAC,IAAKA,CAAC,CAACF,GAAG,KAAKA,GAAG,CACrB;IACH,CAAC,CAAC;EACJ;EAEAG,qBAAqB;IACnB,IAAIC,MAAM,GAAc,EAAE;IAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,cAAc,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MACnD,MAAMG,aAAa,GAAG,IAAI,CAACF,cAAc,CAACD,CAAC,CAAC;MAC5CD,MAAM,GAAGA,MAAM,CAACK,MAAM,CACpB,IAAI,CAACX,gBAAgB,CAACG,MAAM,CACzBS,OAAO,IAAKA,OAAO,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,aAAa,CAACI,WAAW,EAAE,CAAC,CAC/E,CACF;;IAEH;IACA,OAAOE,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACZ,MAAM,CAAC,CAAC;EACpC;EAEA,IAAIa,yBAAyB;IAC3B,MAAMC,UAAU,GAAG,CAAC,IAAI,CAACC,WAAW,GAAG,CAAC,IAAI,IAAI,CAACC,eAAe;IAChE,MAAMC,QAAQ,GAAGH,UAAU,GAAG,IAAI,CAACE,eAAe;IAClD,IAAIhB,MAAM,GAAc,EAAE;IAC1B,IAAI,IAAI,CAACE,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;MAClCH,MAAM,GAAG,IAAI,CAACD,qBAAqB,EAAE;KACtC,MAAM;MACLC,MAAM,GAAG,IAAI,CAACN,gBAAgB;;IAEhC,OAAOM,MAAM,CAACkB,KAAK,CAACJ,UAAU,EAAEG,QAAQ,CAAC;EAC3C;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA,IAAIE,KAAK;IACP,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC5B,gBAAgB,CAACS,MAAM,GAAG,IAAI,CAACa,eAAe,CAAC;IAChF,OAAON,KAAK,CAACC,IAAI,CAAC;MAAER,MAAM,EAAEiB;IAAS,CAAE,EAAE,CAACG,CAAC,EAAEtB,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;EAC3D;CAED;AAtEYd,oBAAoB,eALhCD,SAAS,CAAC;EACTsC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWvC,oBAAoB,CAsEhC;SAtEYA,oBAAoB","names":["Component","ProductListComponent","constructor","productService","ngOnInit","getProducts","subscribe","data","filteredProducts","deleteProduct","sku","filter","p","filterProductsByColor","result","i","selectedColors","length","selectedColor","concat","product","color","toLowerCase","includes","Array","from","Set","filteredProductsWithColor","startIndex","currentPage","productsPerPage","endIndex","slice","pages","pageCount","Math","ceil","_","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/samarthgoudar/Documents/Development/Projects/Git/Paige-Ecommerce-Widget/frontend/paige-ecommerce-widget/src/app/products/product-list/product-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Product } from '../product.model';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductService } from '../product.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n})\nexport class ProductListComponent implements OnInit {\n  // colorFilter: string = '';\n  filteredProducts: Product[] = [];\n  selectedColors: string[] = ['blue', 'white'];\n  dropdownSettings = {};\n\n  // Pagination variables\n  currentPage = 1;\n  productsPerPage = 10;\n  itemsPerPage: number = 10;\n\n  constructor(private productService: ProductService) {}\n\n  ngOnInit(): void {\n    this.productService.getProducts().subscribe((data: Product[]) => {\n      this.filteredProducts = data;\n    });\n  }\n  \n  deleteProduct(sku: string): void {\n    this.productService.deleteProduct(sku).subscribe(() => {\n      // Filter out the deleted product from the products array\n      this.filteredProducts = this.filteredProducts.filter(\n        (p) => p.sku !== sku\n      );\n    });\n  }\n\n  filterProductsByColor(): Product[] {\n    let result: Product[] = [];\n    for (let i = 0; i < this.selectedColors.length; i++) {\n      const selectedColor = this.selectedColors[i];\n      result = result.concat(\n        this.filteredProducts.filter(\n          (product) => product.color.toLowerCase().includes(selectedColor.toLowerCase())\n        )\n      );\n    }\n    // Remove duplicates\n    return Array.from(new Set(result));\n  }\n\n  get filteredProductsWithColor(): Product[] {\n    const startIndex = (this.currentPage - 1) * this.productsPerPage;\n    const endIndex = startIndex + this.productsPerPage;\n    let result: Product[] = [];\n    if (this.selectedColors.length > 0) {\n      result = this.filterProductsByColor();\n    } else {\n      result = this.filteredProducts;\n    }\n    return result.slice(startIndex, endIndex);\n  }\n\n\n  // get filteredProductsWithColor(): Product[] {\n  //   const startIndex = (this.currentPage - 1) * this.productsPerPage;\n  //   const endIndex = startIndex + this.productsPerPage;\n  //   return this.filteredProducts\n  //     .filter((product) =>\n  //       product.color.toLowerCase().includes(this.colorFilter.toLowerCase())\n  //     ).slice(startIndex, endIndex);\n\n  // }\n\n  get pages(): number[] {\n    const pageCount = Math.ceil(this.filteredProducts.length / this.productsPerPage);\n    return Array.from({ length: pageCount }, (_, i) => i + 1);\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}